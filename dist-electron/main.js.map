{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import { app, BrowserWindow, ipcMain } from 'electron';\nimport * as path from 'path';\nimport { fileURLToPath } from 'url';\n\n// ES module equivalent of __dirname\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// The built directory structure\n//\n// \u251C\u2500\u252C\u2500\u252C dist\n// \u2502 \u2502 \u2514\u2500\u2500 index.html\n// \u2502 \u2502\n// \u251C\u2500\u252C\u2500\u252C dist-electron\n// \u2502 \u2502 \u251C\u2500\u2500 main.js\n// \u2502 \u2502 \u2514\u2500\u2500 preload.js\n// \u2502\nprocess.env.DIST = path.join(__dirname, '../dist');\nprocess.env.VITE_PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? path.join(process.env.DIST, '../public')\n  : process.env.DIST;\n\nlet win: BrowserWindow | null;\n// \uD83D\uDEA7 Use ['ENV_NAME'] avoid vite:define plugin\nconst VITE_DEV_SERVER_URL = process.env['VITE_DEV_SERVER_URL'];\n\nfunction createWindow() {\n  win = new BrowserWindow({\n    width: 1200,\n    height: 800,\n    minWidth: 800,\n    minHeight: 600,\n    icon: path.join(process.env.VITE_PUBLIC, 'electron-vite.svg'),\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      preload: path.join(__dirname, 'preload.js'),\n    },\n  });\n\n  // Test active push message to Renderer-process.\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', new Date().toLocaleString());\n  });\n\n  if (VITE_DEV_SERVER_URL) {\n    win.loadURL(VITE_DEV_SERVER_URL);\n    win.webContents.openDevTools();\n  } else {\n    win.loadFile(path.join(process.env.DIST, 'index.html'));\n  }\n}\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n    win = null;\n  }\n});\n\napp.whenReady().then(createWindow);\n\napp.on('activate', () => {\n  const allWindows = BrowserWindow.getAllWindows();\n  if (allWindows.length) {\n    allWindows[0].focus();\n  } else {\n    createWindow();\n  }\n});\n\n// IPC handlers for Reddit API and file system operations\nipcMain.handle('reddit-auth', async (event, ...args) => {\n  // TODO: Implement Reddit OAuth2 authentication\n  console.log('Reddit auth requested:', args);\n  return { success: false, message: 'Not implemented yet' };\n});\n\nipcMain.handle('download-content', async (event, ...args) => {\n  // TODO: Implement content download\n  console.log('Download content requested:', args);\n  return { success: false, message: 'Not implemented yet' };\n});\n\nipcMain.handle('get-saved-content', async (event, ...args) => {\n  // TODO: Implement fetching saved content\n  console.log('Get saved content requested:', args);\n  return { success: false, message: 'Not implemented yet' };\n});\n"],
  "mappings": ";AAAA,SAAS,KAAK,eAAe,eAAe;AAC5C,YAAY,UAAU;AACtB,SAAS,qBAAqB;AAG9B,IAAM,aAAa,cAAc,YAAY,GAAG;AAChD,IAAM,YAAiB,aAAQ,UAAU;AAWzC,QAAQ,IAAI,OAAY,UAAK,WAAW,SAAS;AACjD,QAAQ,IAAI,cAAc,QAAQ,IAAI,sBAC7B,UAAK,QAAQ,IAAI,MAAM,WAAW,IACvC,QAAQ,IAAI;AAEhB,IAAI;AAEJ,IAAM,sBAAsB,QAAQ,IAAI,qBAAqB;AAE7D,SAAS,eAAe;AACtB,QAAM,IAAI,cAAc;AAAA,IACtB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,WAAW;AAAA,IACX,MAAW,UAAK,QAAQ,IAAI,aAAa,mBAAmB;AAAA,IAC5D,gBAAgB;AAAA,MACd,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,SAAc,UAAK,WAAW,YAAY;AAAA,IAC5C;AAAA,EACF,CAAC;AAGD,MAAI,YAAY,GAAG,mBAAmB,MAAM;AAC1C,SAAK,YAAY,KAAK,yBAAwB,oBAAI,KAAK,GAAE,eAAe,CAAC;AAAA,EAC3E,CAAC;AAED,MAAI,qBAAqB;AACvB,QAAI,QAAQ,mBAAmB;AAC/B,QAAI,YAAY,aAAa;AAAA,EAC/B,OAAO;AACL,QAAI,SAAc,UAAK,QAAQ,IAAI,MAAM,YAAY,CAAC;AAAA,EACxD;AACF;AAEA,IAAI,GAAG,qBAAqB,MAAM;AAChC,MAAI,QAAQ,aAAa,UAAU;AACjC,QAAI,KAAK;AACT,UAAM;AAAA,EACR;AACF,CAAC;AAED,IAAI,UAAU,EAAE,KAAK,YAAY;AAEjC,IAAI,GAAG,YAAY,MAAM;AACvB,QAAM,aAAa,cAAc,cAAc;AAC/C,MAAI,WAAW,QAAQ;AACrB,eAAW,CAAC,EAAE,MAAM;AAAA,EACtB,OAAO;AACL,iBAAa;AAAA,EACf;AACF,CAAC;AAGD,QAAQ,OAAO,eAAe,OAAO,UAAU,SAAS;AAEtD,UAAQ,IAAI,0BAA0B,IAAI;AAC1C,SAAO,EAAE,SAAS,OAAO,SAAS,sBAAsB;AAC1D,CAAC;AAED,QAAQ,OAAO,oBAAoB,OAAO,UAAU,SAAS;AAE3D,UAAQ,IAAI,+BAA+B,IAAI;AAC/C,SAAO,EAAE,SAAS,OAAO,SAAS,sBAAsB;AAC1D,CAAC;AAED,QAAQ,OAAO,qBAAqB,OAAO,UAAU,SAAS;AAE5D,UAAQ,IAAI,gCAAgC,IAAI;AAChD,SAAO,EAAE,SAAS,OAAO,SAAS,sBAAsB;AAC1D,CAAC;",
  "names": []
}
