{
  "version": 3,
  "sources": ["../src/preload.ts"],
  "sourcesContent": ["import { contextBridge, ipcRenderer } from 'electron';\n\n// --------- Expose some API to the Renderer process ---------\ncontextBridge.exposeInMainWorld('electronAPI', {\n  // Reddit API operations\n  redditAuth: (...args: any[]) => ipcRenderer.invoke('reddit-auth', ...args),\n  downloadContent: (...args: any[]) => ipcRenderer.invoke('download-content', ...args),\n  getSavedContent: (...args: any[]) => ipcRenderer.invoke('get-saved-content', ...args),\n  \n  // File system operations\n  selectDirectory: (...args: any[]) => ipcRenderer.invoke('select-directory', ...args),\n  saveFile: (...args: any[]) => ipcRenderer.invoke('save-file', ...args),\n  \n  // App lifecycle\n  onMainProcessMessage: (callback: (message: string) => void) => {\n    ipcRenderer.on('main-process-message', (event, message) => callback(message));\n  },\n  \n  // Progress updates\n  onDownloadProgress: (callback: (progress: any) => void) => {\n    ipcRenderer.on('download-progress', (event, progress) => callback(progress));\n  },\n  \n  onAuthStatus: (callback: (status: any) => void) => {\n    ipcRenderer.on('auth-status', (event, status) => callback(status));\n  },\n});\n\n// --------- Preload scripts are loaded before other scripts ---------\n// You can access Node.js APIs in the preload scripts.\n// It has the same sandbox as a Chrome extension.\nwindow.addEventListener('DOMContentLoaded', () => {\n  const replaceText = (selector: string, text: string) => {\n    const element = document.getElementById(selector);\n    if (element) element.innerText = text;\n  };\n\n  for (const type of ['chrome', 'node', 'electron']) {\n    replaceText(`${type}-version`, process.versions[type]!);\n  }\n}); "],
  "mappings": ";AAAA,sBAA2C;AAG3C,8BAAc,kBAAkB,eAAe;AAAA;AAAA,EAE7C,YAAY,IAAI,SAAgB,4BAAY,OAAO,eAAe,GAAG,IAAI;AAAA,EACzE,iBAAiB,IAAI,SAAgB,4BAAY,OAAO,oBAAoB,GAAG,IAAI;AAAA,EACnF,iBAAiB,IAAI,SAAgB,4BAAY,OAAO,qBAAqB,GAAG,IAAI;AAAA;AAAA,EAGpF,iBAAiB,IAAI,SAAgB,4BAAY,OAAO,oBAAoB,GAAG,IAAI;AAAA,EACnF,UAAU,IAAI,SAAgB,4BAAY,OAAO,aAAa,GAAG,IAAI;AAAA;AAAA,EAGrE,sBAAsB,CAAC,aAAwC;AAC7D,gCAAY,GAAG,wBAAwB,CAAC,OAAO,YAAY,SAAS,OAAO,CAAC;AAAA,EAC9E;AAAA;AAAA,EAGA,oBAAoB,CAAC,aAAsC;AACzD,gCAAY,GAAG,qBAAqB,CAAC,OAAO,aAAa,SAAS,QAAQ,CAAC;AAAA,EAC7E;AAAA,EAEA,cAAc,CAAC,aAAoC;AACjD,gCAAY,GAAG,eAAe,CAAC,OAAO,WAAW,SAAS,MAAM,CAAC;AAAA,EACnE;AACF,CAAC;AAKD,OAAO,iBAAiB,oBAAoB,MAAM;AAChD,QAAM,cAAc,CAAC,UAAkB,SAAiB;AACtD,UAAM,UAAU,SAAS,eAAe,QAAQ;AAChD,QAAI,QAAS,SAAQ,YAAY;AAAA,EACnC;AAEA,aAAW,QAAQ,CAAC,UAAU,QAAQ,UAAU,GAAG;AACjD,gBAAY,GAAG,IAAI,YAAY,QAAQ,SAAS,IAAI,CAAE;AAAA,EACxD;AACF,CAAC;",
  "names": []
}
